
# Source: thanos/charts/minio/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-minio
  namespace: "fed"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-6.0.0
    app.kubernetes.io/instance: thanos
    app.kubernetes.io/managed-by: Helm
spec:
  strategy: 
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: thanos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        helm.sh/chart: minio-6.0.0
        app.kubernetes.io/instance: thanos
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/credentials-secret: 8aca8e8e598fece5bd443592bb00b8674a482a8b56bacd2ff793608e31cc21ce
    spec:
      serviceAccountName: thanos-minio
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio
                    app.kubernetes.io/instance: thanos
                namespaces:
                  - fed
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2021.1.8-debian-10-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: thanos-minio
                  key: access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: thanos-minio
                  key: secret-key
            - name: MINIO_DEFAULT_BUCKETS
              value: thanos
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: public
          
          ports:
            - name: minio
              containerPort: 9000
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /minio/health/live
              port: minio
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            tcpSocket:
              port: minio
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: "data"
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: thanos-minio

