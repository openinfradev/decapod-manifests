
# Source: eck-operator/charts/eck-operator-crds/templates/all-crds.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: 'eck-operator'
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/name: 'eck-operator-crds'
    app.kubernetes.io/version: '1.3.1'
    helm.sh/chart: 'eck-operator-crds-1.3.1'
  name: beats.beat.k8s.elastic.co
spec:
  additionalPrinterColumns:
  - JSONPath: .status.health
    name: health
    type: string
  - JSONPath: .status.availableNodes
    description: Available nodes
    name: available
    type: integer
  - JSONPath: .status.expectedNodes
    description: Expected nodes
    name: expected
    type: integer
  - JSONPath: .spec.type
    description: Beat type
    name: type
    type: string
  - JSONPath: .status.version
    description: Beat version
    name: version
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: age
    type: date
  group: beat.k8s.elastic.co
  names:
    categories:
    - elastic
    kind: Beat
    listKind: BeatList
    plural: beats
    shortNames:
    - beat
    singular: beat
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Beat is the Schema for the Beats API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BeatSpec defines the desired state of a Beat.
          properties:
            config:
              description: Config holds the Beat configuration. At most one of [`Config`,
                `ConfigRef`] can be specified.
              type: object
            configRef:
              description: ConfigRef contains a reference to an existing Kubernetes
                Secret holding the Beat configuration. Beat settings must be specified
                as yaml, under a single "beat.yml" entry. At most one of [`Config`,
                `ConfigRef`] can be specified.
              properties:
                secretName:
                  description: SecretName is the name of the secret.
                  type: string
              type: object
            daemonSet:
              description: DaemonSet specifies the Beat should be deployed as a DaemonSet,
                and allows providing its spec. Cannot be used along with `deployment`.
                If both are absent a default for the Type is used.
              properties: {}
              type: object
            deployment:
              description: Deployment specifies the Beat should be deployed as a Deployment,
                and allows providing its spec. Cannot be used along with `daemonSet`.
                If both are absent a default for the Type is used.
              properties:
                replicas:
                  format: int32
                  type: integer
                strategy:
                  description: DeploymentStrategy describes how to replace existing
                    pods with new ones.
                  properties:
                    rollingUpdate:
                      description: 'Rolling update config params. Present only if
                        DeploymentStrategyType = RollingUpdate. 
