
# Source: taco-watcher/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: taco-watcher
  labels:
    app: taco-watcher
    chart: taco-watcher-0.1.0
    heritage: Helm
    release: taco-watcher
data:
  tacomo.conf: |-
     [system]
     service.port=32000
     service.proxyportlist=32001-32009
     [logs]
     log.level=LOG_DEBUG
     log.path=/home/tacomo/tacomo-webserver/logs
     log.max.file.size=64
     log.max.history=3
     [ldap]
     ldap.login.use=false
     ldap.server.ip=218.36.252.193
     ldap.server.port=32182
     ldap.ssl.enable=false
     ldap.ssl.cert.validation.skip=true
     ldap.user.dn.pattern=cn={0},dc=cluster,dc=local
     ldap.conn.timeout=5
     ldap.read.timeout=
     [security]
     security.session.timeout=6
     [kibana]
     kibana.authkey=elastic:tacoword
     [grafana]
     grafana.authkey=admin:password
     [kubernetes]
     k8s.api.prometheusrule.url=/apis/monitoring.coreos.com/v1/namespaces/fed/prometheusrules
     k8s.api.loggingfilter.url=/apis/logging.banzaicloud.io/v1beta1/namespaces/fed/flows
  prometheusrule.json: |-
    {
      "apiVersion" : "monitoring.coreos.com/v1",
      "kind" : "PrometheusRule",
      "metadata" : {
        "annotations":{ 
          "prometheus-operator-validated":"true"
        },
        "name" : "",
        "namespace" : "mon"
      },
      "spec" : {
        "groups" : [ {
          "name" : "",
          "rules" : [ {
            "alert" : "",
            "annotations" : {
              "message" : ""
            },
            "expr" : "",
            "for" : "",
            "labels" : {
              "severity" : ""
            }
          } ]
        } ]
      }
    }

  loggingfilter.json: |-
    {
      "apiVersion" : "logging.banzaicloud.io/v1beta1",
      "kind" : "Flow",
      "metadata" : {
        "name" : "",
        "namespace" : "mon"
      },
      "spec" : {
        "filters":[ {
          "parser" : {
            "parse" : {
              "type" : "nginx"
            },
            "remove_key_name_field" : true
          }
        },
        {
          "tag_normaliser" : {
            "format" : "${namespace_name}.${pod_name}.${container_name}"
          }
        },
        {
          "grep" : {
            "and" : [ {
              "regexp" : [ {
                "key" : "",
                "pattern" : ""
              } ]
            },
            {
              "exclude" : [ {
                "key" : "",
                "pattern" : ""
              } ]
            } ]
          }
        } ],
        "outputRefs" : [
          "es-output"
        ],
        "selectors" : {
          "app":"nginx"
        }
      }
    }

  tacomodb_1.sql: |-
    CREATE TABLE IF NOT EXISTS properties (
      prop_key TEXT NOT NULL,
      prop_value TEXT DEFAULT NULL,
      PRIMARY KEY(prop_key)
    );


    CREATE TABLE IF NOT EXISTS user (
      id TEXT NOT NULL,
      passwd TEXT NOT NULL,
      PRIMARY KEY (id)
    );


    CREATE TABLE cluster (
      id TEXT NOT NULL,
      kibana_url TEXT DEFAULT NULL,
      grafana_url TEXT DEFAULT NULL,
      k8s_url TEXT DEFAULT NULL,
      k8s_token TEXT DEFAULT NULL,
      is_main INTEGER NOT NULL DEFAULT 0,
      main_page_type TEXT DEFAULT NULL,
      main_page_link TEXT DEFAULT NULL,
      k8s_page_type TEXT DEFAULT NULL,
      k8s_page_link TEXT DEFAULT NULL,
      openstack_page_type TEXT DEFAULT NULL,
      openstack_page_link TEXT DEFAULT NULL,
      ceph_page_type TEXT DEFAULT NULL,
      ceph_page_link TEXT DEFAULT NULL,
      PRIMARY KEY (id)
    );

    CREATE TABLE cluster_menu (
      cluster_id TEXT NOT NULL,
      id INTEGER NOT NULL,
      parent_id INTEGER NOT NULL,
      name TEXT NOT NULL,
      seq INTEGER NOT NULL,
      link TEXT DEFAULT NULL,
      url_type TEXT DEFAULT NULL,
      popup_type TEXT DEFAULT NULL,
      PRIMARY KEY (cluster_id, id),
      CONSTRAINT fk_cluster FOREIGN KEY (cluster_id)
       REFERENCES cluster (id) ON DELETE CASCADE
    );

    CREATE TABLE default_menu (
      id INTEGER NOT NULL,
      parent_id INTEGER NOT NULL,
      name TEXT NOT NULL,
      seq INTEGER NOT NULL,
      link TEXT NOT NULL,
      icon TEXT DEFAULT NULL,
      PRIMARY KEY (id)
    );
    INSERT INTO properties VALUES ('db_revision', '1');
    INSERT INTO properties VALUES ('theme_type', 'light');
    INSERT INTO user VALUES ('taco', 'password');
    INSERT INTO default_menu VALUES (1, 0, 'Cluster Management', 1, '/setcluster', 'icon-setting');
    INSERT INTO default_menu VALUES (2, 0, 'Prometheus Rule', 2, '/prometheusrule', 'icon-alarm');

