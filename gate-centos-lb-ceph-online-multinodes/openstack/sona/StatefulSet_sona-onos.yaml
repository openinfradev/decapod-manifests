# Source: sona/templates/statefulset-sona.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "sona-onos"
  labels:
    release_group: sona
    application: sona
    component: onos
spec:
  serviceName: "sona-onos"
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      release_group: sona
      application: sona
      component: onos
  replicas: 2
  template:
    metadata:
      labels:
        release_group: sona
        application: sona
        component: onos
    spec:

      nodeSelector:
        sona-control-plane: "enabled"

      hostNetwork: true
      initContainers:
        - name: python-container
          image: python:2-alpine
          imagePullPolicy: IfNotPresent
          command:
            - /tmp/push-cluster-component.sh
          volumeMounts:
            - name: sona-bin
              mountPath: /tmp/push-cluster-component.sh
              subPath: push-cluster-component.sh
              readOnly: true
            - name: sona-bin
              mountPath: /tmp/onos-gen-partitions.py
              subPath: onos-gen-partitions.py
              readOnly: true
            - name: sona-config
              mountPath: /tmp/sona-config
              readOnly: false
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      containers:
        - name: sona-onos
          image: opensona/onos-sona-nightly-docker:stable
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
                - /tmp/sona-onos-readiness-check.sh
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /tmp/sona-liveness-check.sh
            initialDelaySeconds: 60
            periodSeconds: 3
          resources:
            requests:
              memory: "16Gi"
              cpu: "4"
            limits:
              memory: "16Gi"
              cpu: "4"
          ports:
            - containerPort: 6653
            - containerPort: 6640
            - containerPort: 8181
            - containerPort: 8101
            - containerPort: 9876
          volumeMounts:
            - name: sona-bin
              mountPath: /tmp/sona-onos-readiness-check.sh
              subPath: sona-onos-readiness-check.sh
              readOnly: true
            - name: sona-bin
              mountPath: /tmp/sona-liveness-check.sh
              subPath: sona-liveness-check.sh
              readOnly: true
            - name: sona-config
              mountPath: /root/onos/config
              readOnly: true
            - name: sona-log
              mountPath: /root/onos/apache-karaf-3.0.8/data/log
              readOnly: false
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Dfile.encoding=UTF8 -Donos.cluster.messaging.minTimeoutMillis=500 -Donos.cluster.messaging.connectionPoolSize=16 -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseContainerSupport -XX:+PrintFlagsFinal"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: sona-ha
          image: opensona/os-client-docker:latest
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
                - /tmp/sona-readiness-check.sh
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /tmp/sona-liveness-check.sh
            initialDelaySeconds: 60
            periodSeconds: 3
          ports:
          - containerPort: 9393
          command: ['/tmp/sona-ha.sh']
          volumeMounts:
            - name: sona-bin
              mountPath: /tmp/sona-ha.sh
              subPath: sona-ha.sh
              readOnly: true
            - name: sona-bin
              mountPath: /tmp/sona-liveness-check.sh
              subPath: sona-liveness-check.sh
              readOnly: true
            - name: sona-bin
              mountPath: /tmp/sona-readiness-check.sh
              subPath: sona-readiness-check.sh
              readOnly: true
            - name: network-config
              mountPath: /tmp/network-config
              readOnly: false
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      volumes:
        - name: sona-bin
          configMap:
            name: sona-bin
            defaultMode: 0555
        - name: sona-config
          hostPath:
            path: /tmp/sona-config
            type: DirectoryOrCreate
        - name: network-config
          hostPath:
            path: /tmp/network-config
            type: DirectoryOrCreate
        - name: sona-log
          hostPath:
            path: /var/log/sona-log
            type: DirectoryOrCreate
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
